[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Jody Holland Thesis",
    "section": "",
    "text": "Welcome/Bienvenido to the central repository for my thesis project, which casts a spotlight on the intersection of surface temperatures, environmental injustice, and tourism along the Southern Gran Canaria coastline. Focusing on the localities of Maspalomas and Playa del Inglés and using remote sensing data from 2023, this project queries how these mass tourism destinations are affected by and contribute to climate-related disparities.\nThis platform serves as a comprehensive archive of the data analysis undertaken for project. Much of this is completed using R and Python, working within a GIS framework for these languages. Through innovative methodologies, this project operationalises a variety of remote sensing data sources such as the LandSat 8 sattellite and the Sentinel 2 unit to explore the distribution of surface temperatures on a micro-climate scale, juxtaposing these findings against the backdrop of local environmental justice and urban inequality concerns.\n\n\n\nIsla de Gran Canaria (Leoncio Afonso Perez 1953)"
  },
  {
    "objectID": "index.html#introduction",
    "href": "index.html#introduction",
    "title": "Jody Holland Thesis",
    "section": "",
    "text": "Welcome/Bienvenido to the central repository for my thesis project, which casts a spotlight on the intersection of surface temperatures, environmental injustice, and tourism along the Southern Gran Canaria coastline. Focusing on the localities of Maspalomas and Playa del Inglés and using remote sensing data from 2023, this project queries how these mass tourism destinations are affected by and contribute to climate-related disparities.\nThis platform serves as a comprehensive archive of the data analysis undertaken for project. Much of this is completed using R and Python, working within a GIS framework for these languages. Through innovative methodologies, this project operationalises a variety of remote sensing data sources such as the LandSat 8 sattellite and the Sentinel 2 unit to explore the distribution of surface temperatures on a micro-climate scale, juxtaposing these findings against the backdrop of local environmental justice and urban inequality concerns.\n\n\n\nIsla de Gran Canaria (Leoncio Afonso Perez 1953)"
  },
  {
    "objectID": "lsmodelling.html",
    "href": "lsmodelling.html",
    "title": "LandSat 8 Modelling",
    "section": "",
    "text": "The first methodological step is to train a variety of models predicting LST using LandSat 8 at 30m resolution. This is in a similar process to Onačillová et al. (2022); Equere et al. (2021); Son et al. (2017); Karyati et al. (2022). In this modelling process we employ three types of modelling approaches:\n\nLinear Regression (Onačillová et al. 2022)\nAdvanced Neural Networks (Equere et al. 2021)\nGeographically Weighted Regression\n\nThrough comparing the accuracy of these models we make inferences on which is most likely to provide high utility data for use in modelling 10m resolution LST with Sentinel 2 data as an input.\n\n\nThis methodology will use the following r packages for data wrangling using data from July 24th 2023 (a day when both Sentinel and Landsat imagery coincides).\n\nThe tidyverse family of packages (Wickham et al. 2019), which includes\n\ndplyr for wrangling data (Wickham et al. 2023)\ntidyr for managing data sets (Wickham, Vaughan, and Girlich 2024)\nggplot2 for visualisations (Wickham 2016)\n\nThe raster package for handling raster data (rast?)\nThe RColorBrewer package for colour scales (Neuwirth 2022)\nThe sf package for handling shapefile data (Pebesma and Bivand 2023)\nThe leaflet package for interactive visualisation (Cheng et al. 2023)\nThe osmdata package for extracting coastline data (Massicotte and South 2023)\nThe modelsummary package for outputting regression results (Arel-Bundock 2022)\n\n\n# load packages\nlibrary(tidyverse)\nlibrary(terra)\nlibrary(RColorBrewer)\nlibrary(sf)\nlibrary(leaflet)\nlibrary(osmdata)\nlibrary(modelsummary)"
  },
  {
    "objectID": "lsmodelling.html#introduction",
    "href": "lsmodelling.html#introduction",
    "title": "LandSat 8 Modelling",
    "section": "",
    "text": "The first methodological step is to train a variety of models predicting LST using LandSat 8 at 30m resolution. This is in a similar process to Onačillová et al. (2022); Equere et al. (2021); Son et al. (2017); Karyati et al. (2022). In this modelling process we employ three types of modelling approaches:\n\nLinear Regression (Onačillová et al. 2022)\nAdvanced Neural Networks (Equere et al. 2021)\nGeographically Weighted Regression\n\nThrough comparing the accuracy of these models we make inferences on which is most likely to provide high utility data for use in modelling 10m resolution LST with Sentinel 2 ºdata as input."
  },
  {
    "objectID": "lsmodelling.html#input-data",
    "href": "lsmodelling.html#input-data",
    "title": "LandSat 8 Modelling",
    "section": "Input Data",
    "text": "Input Data\nTo train these models, we use input data from Landsat covering and clipped to our study area of Maspalomas-Playa del Inglés. This raster data is broken down into broken down into bands from which the following can be calculated:\n\nLST\nNDVI\nNDBI\nNDSI (normalised difference sand index)\nSurface Albedo\n\nWe will also use the following auxiliary data\n\nRoad Proximity (from OSM)\nRasterised Water Features (from OSM)\nProximity to Coast/Ocean\nElevation"
  },
  {
    "objectID": "lsmodelling.html#libraries",
    "href": "lsmodelling.html#libraries",
    "title": "LandSat 8 Modelling",
    "section": "",
    "text": "This methodology will use the following r packages for data wrangling using data from July 24th 2023 (a day when both Sentinel and Landsat imagery coincides).\n\nThe tidyverse family of packages (Wickham et al. 2019), which includes\n\ndplyr for wrangling data (Wickham et al. 2023)\ntidyr for managing data sets (Wickham, Vaughan, and Girlich 2024)\nggplot2 for visualisations (Wickham 2016)\n\nThe raster package for handling raster data (rast?)\nThe RColorBrewer package for colour scales (Neuwirth 2022)\nThe sf package for handling shapefile data (Pebesma and Bivand 2023)\nThe leaflet package for interactive visualisation (Cheng et al. 2023)\nThe osmdata package for extracting coastline data (Massicotte and South 2023)\nThe modelsummary package for outputting regression results (Arel-Bundock 2022)\n\n\n# load packages\nlibrary(tidyverse)\nlibrary(terra)\nlibrary(RColorBrewer)\nlibrary(sf)\nlibrary(leaflet)\nlibrary(osmdata)\nlibrary(modelsummary)"
  },
  {
    "objectID": "lsmodelling.html#loading-rasters",
    "href": "lsmodelling.html#loading-rasters",
    "title": "LandSat 8 Modelling",
    "section": "Loading Rasters",
    "text": "Loading Rasters\nThese rasts denote different bands of EM radiation captured by the LandSat 8 satellite over the south of Gran Canaria at 11:29am on the 24th July 2023 (U. S. Geological Surey 2023). These bands cover most of the visible light spectrum as well as the infrared spectrum. Combined in various was they can be used to calculate various measures such as the NDVI (normalised difference vegetation index) and the LST (land surface temperature).\nFirst lets plot and load the rasts\n\n# function to plot raster with a label and custome colour scale\nplot_rast = function(raster, label, colors) {\n  terra::plot(raster, col=colorRampPalette(colors)(100))\n  mtext(text=label, side=3, line=2)\n}\n\n# define the bounding box epsg:4083\nbbox = ext(c(437292.6282,445376.8775,3067829.6809,3072637.1023))\n\n# load each raster, crop to bounding box, and plot with label\nb1 = crop(rast(\"landsat/B1.TIF\"), bbox)\nb2 = crop(rast(\"landsat/B2.TIF\"), bbox)\nb3 = crop(rast(\"landsat/B3.TIF\"), bbox)\nb4 = crop(rast(\"landsat/B4.TIF\"), bbox)\nb5 = crop(rast(\"landsat/B5.TIF\"), bbox)\nb6 = crop(rast(\"landsat/B6.TIF\"), bbox)\nb7 = crop(rast(\"landsat/B7.TIF\"), bbox)\nb10 = crop(rast(\"landsat/B10.TIF\"), bbox)\n\n# load elevation raster, resample, and crop\nstrm = rast(\"strm/strm.tif\") %&gt;% \n  project(crs(b1)) %&gt;%\n  resample(b1, method = \"bilinear\") %&gt;%\n  crop(bbox)"
  },
  {
    "objectID": "lsmodelling.html#calculating-ndvi",
    "href": "lsmodelling.html#calculating-ndvi",
    "title": "LandSat 8 Modelling",
    "section": "Calculating NDVI",
    "text": "Calculating NDVI\nPerhaps the most important metric beside LST is NVDI. NDVI is also used in the computation of impassivity and ultimately therefore emissivity adjusted LST.\nTo calculate NDVI, the following formula is used:\n\\[\n\\text{NDVI} = \\frac{\\text{NIR} - \\text{Red}}{\\text{NIR} + \\text{Red}}\n\\]\nHere \\(NIR\\) represents the Near-Infrared band reflectance value, in Landsat 8 this is Band 5. Further \\(Red\\) represents the Red band reflectance value, in Landsat 8 this is Band 4.\n\n# calc and plot ndvi using bands 5 and 4\nndvi = (b5-b4)/(b5+b4)\n\nplot_rast(ndvi,\n          \"Normalised Difference Vegetation Index (NDVI)\",\n          c(\"brown\", \"green\"))"
  },
  {
    "objectID": "lsmodelling.html#calculating-lst",
    "href": "lsmodelling.html#calculating-lst",
    "title": "LandSat 8 Modelling",
    "section": "Calculating LST",
    "text": "Calculating LST\nCalculating LST can be straightforward in principle, using Band 10 alone of Landsat 8 data. However, this will not account for surface emissivity. Thus, for this study, an adjusted LST is calculated.\n\nTop of Atmosphere Spectral Radiance\nThe first step is to convert the Digital Numbers \\(DN\\) in the Band 10 layer to Top of Atmosphere Spectral Radiance \\(L_\\lambda\\) values. This process uses input units found the images metadata/MLT file. These values are the RADIANCE_MULT_BAND_10 \\(M_L\\) and the RADIANCE_ADD_BAND_10 \\(\\text{A}_L\\).\nPutting these together into a formula is as follows:\n\\[\n\\text{L}_\\lambda = \\text{M}_L · \\text{DN} + \\text{A}_L\n\\]\n\n# define metadata values\nmult_b10 = 3.8e-04\nadd_b10 = 0.1\n\n# calc and plot\nl = (mult_b10*b10+add_b10)\n\nplot_rast(l,\n          expression(Spectral~Radiance~(L[lambda])),\n          c(\"brown\", \"yellow\"))\n\n\n\n\n\n\nAt-Sensor Temperature\nThe second step is “Conversion of Radiance to At-Sensor Temperature” (Karyati et al. 2022). This This converts the Spectral Radiance into temperature values or Brightness Temperature \\(BT\\) in Kelvin. This process requires two constants related to Landsat 8 Band 10’s specific thermal conversion constants found again in the metadata file. These are \\(K1\\)and \\(K2\\).\nPutting this together into a formula is as follows:\n\\[\n\\text{BT} = \\frac{\\text{K2}}{ln(\\frac{\\text{K1}}{\\text{L}_\\lambda} + 1)}\n\\]\n\n# add effective wavelength of landsat b10\nk1 = 799.0284\nk2 = 1329.2405\n\n# calc and plot\nbt = (k2/log(k1/l+1))\n\nplot_rast(bt,\n          expression(Brightness~Temp~(BT)),\n          c(\"blue\", \"red\")) \n\n\n\n\n\n\nSurface Level Emissivity\nThe above metric alone could be used for study of heat distribution, however it does not account for the variation caused by surface level emissivity. Emissivity denotes how much infrared a surface will absorb or reflect, ranging from a mirror to a perfect black surface. The values of emissivity range from 0 to 1 respectively.\n\nFractional Vegetation Factor\nNDVI is used to determine emissivity, through the fractional vegetation factor \\(\\text{P}_v\\). This value is specific to the region being studied.\nThe formula for calculating fractional vegetation factor is as follows:\n\\[\n\\text{P}_v = \\left( \\frac{\\text{NDVI} - \\text{NDVI}_{\\min}}{\\text{NDVI}_{\\max} - \\text{NDVI}_{\\min}} \\right)^2\n\\]\n\n# define min and max ndvi\nmin_ndvi = global(ndvi, fun=min, na.rm=TRUE) %&gt;%\n  as.numeric()\nmax_ndvi = global(ndvi, fun=max, na.rm=TRUE) %&gt;%\n  as.numeric()\n\n# calc and plot vegetation factor\npv = ((ndvi-min_ndvi)/(max_ndvi-min_ndvi))^2\n\nplot_rast(pv,\n          expression(Fractional~Vegetation~Factor~(P[v])),\n          c(\"maroon\", \"green\"))\n\n\n\n\n\n\nEmissivity\nFrom this the surface emissivity can be calculated. This uses two constants relating to the relative emissivity of soil \\(\\epsilon\\text{s}\\lambda\\) and the emissivity of vegetation \\(\\epsilon\\text{v}\\lambda\\), as well as one surface roughness \\(\\text{C}\\lambda\\) metric of 0.005\nThe formula for estimating emissivity \\(\\epsilon\\lambda\\) is thus as follows:\n\\[\n\\epsilon\\lambda = \\epsilon\\text{v}\\lambda + \\epsilon\\text{s}\\lambda  · (1 - \\text{P}_v) + \\text{C}\\lambda\n\\]\n\n# soil emissivity\nes = 0.964\n\n# veg emissivity\nev = 0.984\n\n# calc and plot emissivity\ne =  ev*pv+es*(1-pv)+0.005\n\nplot_rast(e,\n          expression(Emissivity~(epsilon*lambda)),\n          c(\"yellow\", \"darkgreen\"))\n\n\n\n\n\n\n\nCorrection Constant\nNow most of the building blocks are in place to calculate the adjusted LST. This requires a correction constant \\(\\rho\\) that incorporates the Speed of Light \\(c\\), Planck’s constant \\(h\\), and Boltzmann’s constant \\(\\sigma\\).\nThe formula for this is as follows:\n\\[\n\\rho = \\frac{c·h}{\\sigma}\n\\]\n\n# speed of light\nc = 2.997925e8 \n\n# planck's constant\nh = 6.626070e-34\n\n# boltzmann's constant\nsigma = 1.380649e-23\n\n# calc and output correction constant/rho \nrho = c*h/sigma\nrho\n\n[1] 0.01438777\n\n\n\n\nLand Surface Temperature\nWith these building blocks, plus the wavelength of the emitted radiance for Landsat 8 \\(\\lambda\\), the adjusted LST \\(\\text{T}s\\) can be determined using the following formula (converting from Kelvin to Celcius:\n\\[\n\\text{T}_s = \\frac{\\text{BT}}{1 + (\\frac{\\lambda\\text{BT}}{\\rho} · ln(\\epsilon\\lambda))} - 273.15\n\\]\n\n# wavelength\nwl = 10.895e-6\n\n# calc and plot\nts = bt/(1+(wl*bt/rho)*log(e))-273.15\n\nplot_rast(ts,\n          expression(Land~Surface~Temperature~(T[s])), c(\"blue\", \"red\"))\n\n\n\n\n\nLeaflet Visualisation of LST\nUsing the Leaflet Package for R (Cheng et al. 2023), we can visualise the resulting rast\n\nplet(ts,\n     col=(c(\"darkblue\",\"pink\")),\n     legend=\"bottomright\",\n     main=\"LST (Cº)\",\n     tiles=c(\"Esri.WorldImagery\"))"
  },
  {
    "objectID": "lsmodelling.html#leaflet-visualisation-of-lst",
    "href": "lsmodelling.html#leaflet-visualisation-of-lst",
    "title": "LandSat 8 Modelling",
    "section": "Leaflet Visualisation of LST",
    "text": "Leaflet Visualisation of LST\nUsing the Leaflet Package for R (Cheng et al. 2023), we can visualise the resulting raster\n\npal = colorNumeric(c(\"#0C2C84\", \"#41B6C4\", \"red\"),\n                   values(ts),\n                   na.color = \"transparent\")\n\nleaflet() %&gt;% addTiles() %&gt;%\n  addRasterImage(ts, colors = pal, opacity = 0.9) %&gt;%\n  addLegend(pal = pal, values = values(ts),\n    title = \"LST (Cº)\")\n\n\n\n\n\nBack to Main Menu"
  },
  {
    "objectID": "lsmodelling.html#loading-coast-shapefile",
    "href": "lsmodelling.html#loading-coast-shapefile",
    "title": "LandSat 8 Modelling",
    "section": "Loading Coast Shapefile",
    "text": "Loading Coast Shapefile\nUsing OSM Data to first extract a coastline of the island, this process enables such analysis as calculating distance from the coastline\n\n# query osm\ngran_canaria_query = opq(bbox = \"Gran Canaria\") %&gt;%\n  add_osm_feature(key = \"place\", value = \"island\") %&gt;%\n  osmdata_sf()\n# extract the coast data\ngran_canaria_sf = gran_canaria_query$osm_multipolygons\n\n# make spatial vector\ngran_canaria_vect = st_transform(gran_canaria_sf, crs(b1)) %&gt;%\n  vect()"
  },
  {
    "objectID": "lsmodelling.html#loading-road-shapefile",
    "href": "lsmodelling.html#loading-road-shapefile",
    "title": "LandSat 8 Modelling",
    "section": "Loading Road Shapefile",
    "text": "Loading Road Shapefile\nAgain using OSM data, it is possible to extract road data in the form of a spatial vector.\n\n# define bbox\nbbox_osm = c(-15.630970,27.730945,-15.391159,27.857290)\n\n# query osm\nosm_roads = opq(bbox = bbox_osm) %&gt;%\n  add_osm_feature(key = \"highway\") %&gt;%\n  osmdata_sf()\n\n# extract road lines\nroads_vect = st_transform(osm_roads$osm_lines, crs(b1)) %&gt;%\n  vect()"
  },
  {
    "objectID": "lsmodelling.html#masking-ocean-values",
    "href": "lsmodelling.html#masking-ocean-values",
    "title": "LandSat 8 Modelling",
    "section": "Masking Ocean Values",
    "text": "Masking Ocean Values\n\nb1 = mask(b1, gran_canaria_vect)\nb2 = mask(b2, gran_canaria_vect)\nb3 = mask(b3, gran_canaria_vect)\nb4 = mask(b4, gran_canaria_vect)\nb5 = mask(b5, gran_canaria_vect)\nb6 = mask(b6, gran_canaria_vect)\nb7 = mask(b7, gran_canaria_vect)\nb10 = mask(b10, gran_canaria_vect)\nstrm = mask(strm, gran_canaria_vect)"
  },
  {
    "objectID": "lsmodelling.html#calculating-ndbi",
    "href": "lsmodelling.html#calculating-ndbi",
    "title": "LandSat 8 Modelling",
    "section": "Calculating NDBI",
    "text": "Calculating NDBI\nAnother important metric is NDBI as urban artificial surfaces may trap heat causing excess heating relative to vegetated surfaces.\nTo calculate NDBI for Landsat 8, the following formula is used (Abulibdeh 2021):\n\\[\n\\text{NDVI} = \\frac{\\text{MIR} - \\text{NIR}}{\\text{MIR} + \\text{NIR}}\n\\]\nHere \\(NIR\\) again represents the Middle-Infrared band value, in Landsat 8 this is Band 5. Also \\(NIR\\) again represents the Near-Infrared band value, being Landsat 8 Band 5.\n\nndbi = (b6-b5)/(b6+b5)\n\nplot_rast(ndbi,\n          \"Normalised Difference Built Index (NDBI)\",\n          c(\"lightgreen\", \"black\"))"
  },
  {
    "objectID": "lsmodelling.html#calculating-ndwi",
    "href": "lsmodelling.html#calculating-ndwi",
    "title": "LandSat 8 Modelling",
    "section": "Calculating NDWI",
    "text": "Calculating NDWI\nComplementing these metrics is NDWI, here used to analyse the impact that surface water has upon the temperature.\nTo calculate NWBI for Landsat 8, the following formula is used:\n\\[\n\\text{NDVI} = \\frac{\\text{Green} - \\text{SWIR}}{\\text{Green} + \\text{SWIR}}\n\\]\nHere \\(Green\\) represents the Green reflectance values, in Landsat 8 this is Band 3. Also \\(SWIR\\) again represents the Short-Infrared band value, being Landsat 8 Band 7.\n\n# calc and plot\nndwi = (b3-b7)/(b3+b7)\n\nplot_rast(ndwi,\n          \"Normalised Difference Water Index (NDWI)\",\n          c(\"yellow\", \"blue\"))"
  },
  {
    "objectID": "lsmodelling.html#calculating-surface-albedo",
    "href": "lsmodelling.html#calculating-surface-albedo",
    "title": "LandSat 8 Modelling",
    "section": "Calculating Surface Albedo",
    "text": "Calculating Surface Albedo\nThere is also surface albedo \\(\\alpha\\), which is the the fraction of the reflected shortwave radiation, is calculated using the following formula (Equere et al. 2021):\n\\[\n\\alpha = \\frac{0.356·\\text{Blue} + 0.0130 · \\text{Red} + 0.373 · \\text{NIR} + 0.085 * \\text{MIR} + 0.072 · \\text{SWIR} - 0.0018}{1.016}\n\\]\nHere \\(Blue\\) represents the Blue reflectance values, in Landsat 8 this is Band 2. \\(Red\\) again represents the Red band value, being Landsat 8 Band 4. \\(NIR\\) represents the Near-Infrared values, in Landsat 8 this is Band 5. \\(MIR\\) likewise represents the Middle-Infrared values, being Landsat 8 Band 6. Finally \\(SWIR\\) represents the Near-Infrared values, in Landsat 8 this is Band 7.\n\n# calc and plot\nalbedo = (0.356*b2+0.0130*b4+0.373*b5+0.085*b6+0.072*b7-0.0018)/1.016\n\nplot_rast(albedo,\n          expression(paste(\"Surface Albedo (\", alpha,\")\")),\n          c(\"pink\", \"blue\"))"
  },
  {
    "objectID": "lsmodelling.html#calculating-distance-from-ocean",
    "href": "lsmodelling.html#calculating-distance-from-ocean",
    "title": "LandSat 8 Modelling",
    "section": "Calculating Distance from Ocean",
    "text": "Calculating Distance from Ocean\nIn terms of other environmental variables, there is also distance from the coast to consider, calculated using OSM coastline data.\n\n# create blank template\ntemplate = crop(rast(\"landsat/B1.TIF\"), bbox)\n\n# crop sp by bbox\ngran_canaria_vect = crop(gran_canaria_vect, bbox)\n\n# create land raster\nsea_mask = rasterize(gran_canaria_vect,\n                      template,\n                      NA,\n                      background=1)\n\n\n# calc distance and plot\ncoastdistance = distance(sea_mask) %&gt;%\n  mask(gran_canaria_vect)\nterra::plot(coastdistance, col = hcl.colors(100))\nplot(gran_canaria_vect, add = TRUE)\nmtext(text=\"Coastal Distance (m)\", side=3, line=2)"
  },
  {
    "objectID": "lsmodelling.html#calculating-distance-from-roads",
    "href": "lsmodelling.html#calculating-distance-from-roads",
    "title": "LandSat 8 Modelling",
    "section": "Calculating Distance from Roads",
    "text": "Calculating Distance from Roads\nFurthermore, there is distance from the nearest road, again calculated using OSM coastline data.\n\n# create road raster\nroad_mask = rasterize(roads_vect,\n                      template,\n                      1,\n                      background=NA)\n\n# calc distance and plot\nroaddistance = distance(road_mask) %&gt;%\n  mask(gran_canaria_vect)\nplot(roaddistance, col = hcl.colors(100))\nplot(gran_canaria_vect, add = TRUE)\nmtext(text=\"Road Distance (m)\", side=3, line=2)"
  },
  {
    "objectID": "lsmodelling.html#calculating-elevation",
    "href": "lsmodelling.html#calculating-elevation",
    "title": "LandSat 8 Modelling",
    "section": "Calculating Elevation",
    "text": "Calculating Elevation\nAs elevation is already loaded in 30m resolutionf rom the STRM project. The processing steps here are just to plot and visualise it.\n\n# plot\nplot_rast(strm,\n          \"Elevation (m)\",\n          c(\"green\", \"brown\"))"
  },
  {
    "objectID": "lsmodelling.html#general-linear-model",
    "href": "lsmodelling.html#general-linear-model",
    "title": "LandSat 8 Modelling",
    "section": "General Linear Model",
    "text": "General Linear Model\nThe first model is simply multivariate linear regression fitted within a OLS framework. The formula for this model is:\n\\[\n\\text{T}_{si} = a_0+a _1\\text{NDVI}_i+a _2\\text{NDBI}_i+a _3\\text{NDWI}_i+a _4\\text{Albedo}_i+a _5\\text{Coast}_i+ a _6\\text{Road}_i + \\text{Elevation}_i + \\epsilon_i\n\\]\nWhere \\(i\\) denotes the individual 30m raster tiles and \\(\\epsilon\\) denotes the residual error not accounted for.\n\nrast_stack = c(ts, ndvi, ndbi, ndwi, albedo, coastdistance, roaddistance, strm)\n\ndata_df = na.omit(as.data.frame(rast_stack, xy=TRUE))\n\nnames(data_df) = c(\"X\", \"Y\", \"LST\", \"NDVI\", \"NDBI\", \"NDWI\", \"Albedo\", \"CoastDistance\", \"RoadDistance\", \"Elevation\")\n\nols = lm(LST ~ \n           NDVI +\n           NDBI +\n           NDWI +\n           Albedo +\n           CoastDistance +\n           RoadDistance +\n           Elevation,\n         data=data_df)\n\nmodelsummary(ols, type = \"html\")\n\n\n\n\n\n (1)\n\n\n\n\n(Intercept)\n36.016\n\n\n\n(0.087)\n\n\nNDVI\n−8.325\n\n\n\n(0.286)\n\n\nNDBI\n1.477\n\n\n\n(0.491)\n\n\nNDWI\n−10.929\n\n\n\n(0.324)\n\n\nAlbedo\n0.000\n\n\n\n(0.000)\n\n\nCoastDistance\n0.001\n\n\n\n(0.000)\n\n\nRoadDistance\n0.008\n\n\n\n(0.000)\n\n\nElevation\n−0.003\n\n\n\n(0.000)\n\n\nNum.Obs.\n33086\n\n\nR2\n0.452\n\n\nR2 Adj.\n0.452\n\n\nAIC\n123607.1\n\n\nBIC\n123682.7\n\n\nLog.Lik.\n−61794.525\n\n\nRMSE\n1.57"
  }
]